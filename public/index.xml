<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jpcairesf/Blog</title>
    <link>http://localhost:1313/blog/</link>
    <description>Recent content on jpcairesf/Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Apr 2024 19:35:51 -0300</lastBuildDate><atom:link href="http://localhost:1313/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Career Tips For Remote Junior Devs</title>
      <link>http://localhost:1313/blog/posts/career-tips-for-remote-junior-devs/</link>
      <pubDate>Tue, 09 Apr 2024 19:35:51 -0300</pubDate>
      
      <guid>http://localhost:1313/blog/posts/career-tips-for-remote-junior-devs/</guid>
      
      <description>I started my tech career working from home and yes, there are many barriers to your learning in the beginning if you are not prepared. I already worked from home before this and I applied my &amp;ldquo;best practices&amp;rdquo; to make my growth faster.
TL;DR: Speak, ask for help and guidance, watch other devs coding and never miss technical discussions.
Ask For Help, Seriously Don&amp;rsquo;t wait an entire day to ask for help when you are stucked in a task.</description>
      
    </item>
    
    <item>
      <title>CLI: Bootable USB From ISO</title>
      <link>http://localhost:1313/blog/notes/cli-bootable-usb-from-iso/</link>
      <pubDate>Sun, 31 Mar 2024 09:29:19 -2353</pubDate>
      
      <guid>http://localhost:1313/blog/notes/cli-bootable-usb-from-iso/</guid>
      
      <description>Check if flash drive is properly plugged and identify its label (something like /dev/sda):
sudo fdisk -l Run dd command to make a bootable USB from the ISO file:
sudo dd bs=4M if=/path/to/file.iso of=/dev/sdX status=progress oflag=sync Replace /path/to/file.iso with the path to your ISO file and replace /dev/sdX with the name of your device.</description>
      
    </item>
    
    <item>
      <title>Interview Storytelling</title>
      <link>http://localhost:1313/blog/notes/interview-storytelling/</link>
      <pubDate>Sun, 10 Mar 2024 12:58:19 -2353</pubDate>
      
      <guid>http://localhost:1313/blog/notes/interview-storytelling/</guid>
      
      <description>This post is inspired in a video from A Life Engineered that gives many advices about telling good stories. He also explains how STAR model is more like a linter than a way to structure your story and compare it with U-shape model. This is also a fast cheatsheet, I won&amp;rsquo;t talk about any of these topics in depth.
General Tips Present yourself very quickly Do your homework and bring questions to the interviewers Talk about what you&amp;rsquo;ve done, not your team Challenges may be compatible with the level you aim Anchor your status and show that you can handle challenges of your level Show your career progression and growth mindset Have a good story to tell about your journey in programming U-shape Stablish status about yourself Explain the challenge and then deep dive into it Introduce obstacles Climb until the situation is proportionally better than how it started Make sure that you have an imperfect solution STAR Model Describe a situation Explain the task that you had to complete Describe the actions you took Show the results op your efforts Most Frequent Questions Challenging project/task Improvements in your team Successful projects Handling feedbacks 3 strengths and weaknesses </description>
      
    </item>
    
    <item>
      <title>Sorting Algoithms</title>
      <link>http://localhost:1313/blog/notes/sorting-algorithms/</link>
      <pubDate>Sun, 10 Mar 2024 15:24:15 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/notes/sorting-algorithms/</guid>
      
      <description>First we have to keep some concepts in mind.
Inplace/Outplace: use/don&amp;rsquo;t use extra memory Unstable/Stable: position order change/don&amp;rsquo;t change for repeated values Selection Sort Divides the input list into a sorted and an unsorted region. Repeatedly selects the smallest element from the unsorted region and swaps it with the first element in the unsorted region.
Inplace and unstable O(n2) time and O(1) space def selection_sort(arr): for i in range(len(arr)): min_idx = i for j in range(i+1, n): if arr[j] &amp;lt; arr[min_idx]: min_idx = j arr[i], arr[min_idx] = arr[min_idx], arr[i] Insertion Sort Builds a sorted portion of the list one element at a time.</description>
      
    </item>
    
    <item>
      <title>Coding Interview: Technical Questions</title>
      <link>http://localhost:1313/blog/notes/coding-interview-technical-questions/</link>
      <pubDate>Sat, 09 Mar 2024 07:50:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/notes/coding-interview-technical-questions/</guid>
      
      <description>Walking Through A Problem Listen: pay attention very closely Example: debug your example and find special cases Brute force: state a naive algorithm and then optimize it Optimize: BUD Optimization or look (or ask) for unused info, make time vs. space tradeoff Walk Through: make sure you understand each detail of your optimal solution before coding Implement: modularize your code from the beginning and refactor Test: code review, look for hot spots and special and edge cases Technique #1: BUD Optimization Acronym for Bottlenecks, Unnecessary work and Duplicated work.</description>
      
    </item>
    
    <item>
      <title>Data Structures</title>
      <link>http://localhost:1313/blog/notes/data-structures/</link>
      <pubDate>Sat, 09 Mar 2024 07:50:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/notes/data-structures/</guid>
      
      <description>Arrays A contiguous memory block that stores elements of the same data type. The memory address of the first element in the array is the base address and any other element&amp;rsquo;s address can be calculated using the base address and the size of each element.
array = [] array.append(1) array.append(3) print(array[1]) # 3 array.append(2) print(array.remove(3)) # 3 print(array.index(2)) # 1 Operations Access by index: O(1) by calculating the position Access by value: O(n) by traversal Write in the beginning: O(n), requires shifting elements Write in the end: O(1), no shifting required Pros And Cons Pros: Direct access using indexes, contiguous storage minimizes memory overhead, easy to sort.</description>
      
    </item>
    
    <item>
      <title>How Blogging Can Leverage Your Tech Career</title>
      <link>http://localhost:1313/blog/posts/how-blogging-can-leverage-your-tech-career/</link>
      <pubDate>Tue, 05 Mar 2024 20:35:51 -0300</pubDate>
      
      <guid>http://localhost:1313/blog/posts/how-blogging-can-leverage-your-tech-career/</guid>
      
      <description>You Better Read Reading is important in technology. Documentation, blog posts and articles are the gold mine for learning advanced content, and blogging is a chill way for tech wizards who&amp;rsquo;d rather type than talk on camera to share their wisdom. Tech has this cool vibe where people love creating content, especially on their own blog or platforms like Dev.to.
This cycle represents how it works and I&amp;rsquo;m a big believer in the whole tech blogging community as a mutual collaboration environment.</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/blog/pages/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/pages/about/</guid>
      
      <description>I wrote my first lines of code when I was 12, writing scripts for RPG Maker in Ruby. I was an average gaming nerd kid with very low hardware specs and internet connection who have spent several days fixing problems, installing programs and configuring to make things work. Computer was my second home and no matter how complex the problem there, I debug and try to fix it until I solve it or prove it impossible.</description>
      
    </item>
    
  </channel>
</rss>
